import * as i0 from '@angular/core';
import { Pipe } from '@angular/core';

class TrCurrencyPipe {
    transform(value, symbol = "", isCurrencyFront = false) {
        if (value == 0) {
            return "0,00 " + symbol;
        }
        let isValueNegative = false;
        if (value < 0) {
            isValueNegative = true;
            value *= -1;
        }
        let money = value.toString().split(".");
        let newMoney = "";
        let lira = money[0];
        let penny = "00";
        if (money.length > 1) {
            penny = money[1];
            if (penny.length == 1) {
                penny = penny + "0";
            }
            if (penny.length > 1) {
                penny = this.convertNumber(+penny).toString();
            }
        }
        let count = 0;
        for (let i = lira.length; i > 0; i--) {
            if (count == 3 && count < (lira.length)) {
                newMoney = lira[i - 1] + "." + newMoney;
                count = 1;
            }
            else {
                newMoney = lira[i - 1] + newMoney;
                count++;
            }
        }
        if (!isCurrencyFront)
            newMoney = `${newMoney},${penny} ${symbol}`;
        else
            newMoney = `${symbol}${newMoney},${penny}`;
        if (isValueNegative) {
            newMoney = "-" + newMoney;
        }
        return newMoney;
    }
    convertNumber(value) {
        const stringValue = value.toString();
        if (stringValue.length > 2) {
            const remainingValue = parseInt(stringValue.substr(2));
            if (remainingValue > 5) {
                return parseInt(stringValue.substr(0, 2)) + 1;
            }
            return parseInt(stringValue.substr(0, 2));
        }
        return value;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: TrCurrencyPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "17.0.2", ngImport: i0, type: TrCurrencyPipe, isStandalone: true, name: "trCurrency" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: TrCurrencyPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'trCurrency',
                    standalone: true
                }]
        }] });

/*
 * Public API Surface of my-lib
 */

/**
 * Generated bundle index. Do not edit.
 */

export { TrCurrencyPipe };
//# sourceMappingURL=tr-currency.mjs.map
